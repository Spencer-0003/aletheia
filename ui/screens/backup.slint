// SPDX-FileCopyrightText: 2025 Spencer
// SPDX-License-Identifier: AGPL-3.0-only

import { ScrollView } from "std-widgets.slint";
import { GameLogic } from "../app_logic.slint";
import { Button } from "../components/button.slint";
import { GameCard } from "../components/game_card.slint";
import { SearchBar } from "../components/search_bar.slint";
import { UiGame } from "../structs/ui_game.slint";

export global BackupScreenLogic {
  in property <[UiGame]> filtered_games: [];
  in-out property <[UiGame]> selected_games: [];
  callback filter(string);
  callback select_game(UiGame);
}

export component Backup {
  callback search_changed(string);
  width: 100%;
  height: 100%;

  if (GameLogic.games.length == 0): VerticalLayout {
    alignment: center;
    spacing: 16px;

    Text {
      text: @tr("No games found");
      font-size: 20px;
      font-weight: 600;
      horizontal-alignment: center;
    }

    HorizontalLayout {
      alignment: center;

      Button {
        text: @tr("Refresh");
        height: 40px;
        width: 160px;
        clicked => { GameLogic.refresh_games(); }
      }
    }
  }

  if (GameLogic.games.length > 0): VerticalLayout {
    alignment: start;
    padding: 16px;
    spacing: 8px;

    HorizontalLayout {
      alignment: center;
      SearchBar {
        height: 45px;
        width: 430px;
        placeholder-text: @tr("Search games...");
        changed(text) => { BackupScreenLogic.filter(text); }
      }
    }

    Text {
      text: "Selecting " + BackupScreenLogic.selected_games.length + " / " + GameLogic.games.length + " games";
      color: white;
      opacity: 50%;
      horizontal-alignment: center;
    }

    HorizontalLayout {
      alignment: center;
      spacing: 8px;

      Button {
        width: 140px;
        height: 36px;
        text: "Backup";
      }

      Button {
        width: 140px;
        height: 36px;
        text: GameLogic.games.length != BackupScreenLogic.selected_games.length ? "Select All" : "Clear Selection";
        background: #2f2f49;
        clicked => {
          if (BackupScreenLogic.selected_games.length != GameLogic.games.length) {
            BackupScreenLogic.selected_games = GameLogic.games;
          } else {
            BackupScreenLogic.selected_games = [];
          }
        }
      }
    }

    Flickable {
      VerticalLayout {
        spacing: 8px;
        width: 50%;
        // width: 430px;

        for game in BackupScreenLogic.filtered_games: GameCard {
          game: game;
          clicked => {
            BackupScreenLogic.select_game(game);
          }
        }
      }
    }
  }
}
