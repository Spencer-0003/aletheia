// SPDX-FileCopyrightText: 2025 Spencer
// SPDX-License-Identifier: AGPL-3.0-only

import { Button } from "../components/button.slint";
import { GameCard } from "../components/game_card.slint";
import { SearchBar } from "../components/search_bar.slint";
import { GameLogic } from "../logic/game.slint";
import { NotificationLogic } from "../logic/notification.slint";
import { UiGame } from "../structs/ui_game.slint";

export global GamesScreenLogic {
  in property <[UiGame]> filtered_games: [];
  in-out property <[UiGame]> selected_games: [];
  in property <bool> all_filtered_selected: false;
  callback filter(string);
  callback select_all(bool);
  callback select_game(UiGame);
  callback perform_operation(string);
}

export component Games {
  width: 100%;
  height: 100%;

  if (GameLogic.games.length == 0): VerticalLayout {
    alignment: center;
    spacing: 16px;

    Text {
      text: @tr("No games found");
      font-family: "Inter";
      font-size: 20px;
      font-weight: 600;
      horizontal-alignment: center;
    }

    HorizontalLayout {
      alignment: center;

      Button {
        text: @tr("Refresh");
        height: 40px;
        width: 160px;
        clicked => { GameLogic.refresh_games(); }
      }
    }
  }

  if (GameLogic.games.length > 0): VerticalLayout {
    alignment: start;
    padding: 16px;
    spacing: 8px;

    HorizontalLayout {
      alignment: center;
      search_bar := SearchBar {
        height: 45px;
        width: 430px;
        placeholder-text: @tr("Search games...");
        changed(text) => { GamesScreenLogic.filter(text); }
      }
    }

    if (GamesScreenLogic.selected_games.length > 0): Text {
      text: @tr("Selecting ") + GamesScreenLogic.selected_games.length +
            " / " +
            GameLogic.games.length +
            @tr(" games");
      font-family: "Inter";
      color: white;
      opacity: 50%;
      horizontal-alignment: center;
    }

    HorizontalLayout {
      alignment: center;
      spacing: 8px;

      Button {
        width: 140px;
        height: 36px;
        text: @tr("Backup");
        enabled: GamesScreenLogic.selected_games.length > 0;
        clicked => {
          GamesScreenLogic.perform_operation("backup");
        }
      }

      Button {
        width: 140px;
        height: 36px;
        text: @tr("Restore");
        enabled: GamesScreenLogic.selected_games.length > 0;
        clicked => {
          GamesScreenLogic.perform_operation("restore");
        }
      }

      Button {
        width: 140px;
        height: 36px;
        text: search_bar.text.is-empty
            ? GamesScreenLogic.all_filtered_selected ? @tr("Clear Selection") : @tr("Select All")
            : @tr("{} Filtered", GamesScreenLogic.all_filtered_selected ? "Clear" : "Select");
        background: #2f2f49;
        enabled: GamesScreenLogic.filtered_games.length > 0;
        clicked => {
          GamesScreenLogic.select_all(!GamesScreenLogic.all_filtered_selected);
        }
      }
    }

    Flickable {
      VerticalLayout {
        spacing: 8px;
        width: 50%;
        // width: 430px;

        for game in GamesScreenLogic.filtered_games: GameCard {
          game: game;
          clicked => {
            game.selected = !game.selected;
            GamesScreenLogic.select_game(game);
          }
        }
      }
    }
  }
}
